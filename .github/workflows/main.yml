name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  # APIコスト削減のため定期実行は一時的に無効化
  # schedule:
  #   - cron: '0 0 * * *'  # 毎日深夜に実行
  
  workflow_dispatch:  # 手動実行を有効化
    inputs:
      run_tests:
        description: 'Run tests'
        required: true
        default: true
        type: boolean
      run_build:
        description: 'Run build'
        required: true
        default: true
        type: boolean
      run_deploy:
        description: 'Run deploy'
        required: true
        default: false
        type: boolean

env:
  DOCKER_IMAGE: langgraph-agentic-system-test
  PYTHONPATH: /app
  PYTHONIOENCODING: utf-8
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
  SPOTIFY_USER_ID: ${{ secrets.SPOTIFY_USER_ID }}
  SPOTIFY_TOKEN: ${{ secrets.SPOTIFY_TOKEN }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && (inputs.run_tests || inputs.run_build) || github.event_name != 'workflow_dispatch' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ${{ github.workspace }}
        file: ./Dockerfile
        load: true
        tags: ${{ env.DOCKER_IMAGE }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run tests in Docker
      run: |
        docker run --rm \
          -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
          -e TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }} \
          -e SPOTIFY_USER_ID=${{ secrets.SPOTIFY_USER_ID }} \
          -e SPOTIFY_TOKEN=${{ secrets.SPOTIFY_TOKEN }} \
          ${{ env.DOCKER_IMAGE }}:latest pytest tests/ -v --cov=src --cov-report=xml
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        
  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && inputs.run_deploy || github.ref == 'refs/heads/main' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy
      run: |
        echo "Deploying project..."
        # デプロイコマンドをここに追加 